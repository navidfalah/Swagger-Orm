openapi: 3.0.2
info:
  title: Hamgram API Documentation
  description: |
    ## Project Model
    ### user_auth
        use to handdle user 1-registeration 2-login 3-reset password
    ### instagram
        use to daily fetch data from instagram api using instaloader

    ## User
    our user have five important fields
    ### 1-username 
        username is set None by default we dont need it for authentication at all 
    #### 2-password
        password is seeting by user
    #### 3-mobile
        every user must have a unique mobile number
    #### 4-verifyCode
        verifyCode is a random number between 1000 to 9999 generated by python random function
    #### 5-verifyCode_create_time
        the time verifyCode is created 
    
    ## JWT/Authentication
    ### authentication is described in a image in ../ directory
    
  version: "v1"

externalDocs:
  description: Find out more about Hmagram Project
  url: "https://www.notion.so/Hamgram/"
  
servers:
  - url: "https://hamgram.com/api/v1"
  
tags:
  - name: user
  - name: instagram


paths:

  "/user/register":
    post:
      tags:
        - user
      summary: register and login with phone and password
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "09930731973"
                password:
                  type: string
                  example: "navid7898"
      responses:
      
        "200":
          $ref: "#/components/responses/LoginObject"
          
        "201":
          $ref: "#/components/responses/VerifyObject"
         
        "401":
          $ref: "#/components/responses/WrongPasswordObject"


  "/user/verifycode":
    post:
      tags:
        - user
      summary: get code and return access token
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "09930731973"
                verifyCode:
                  type: integer
                  example: 2313

      responses:
        "200":
          $ref: "#/components/responses/LoginObject"

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  No User:
                    type: string
                    example: "Invalid verifyCode OR No any active user found for given verifyCode"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  No User:
                    type: string
                    example: "No user with this phone!!"
              
  "/user/verifyphone":
    post:
      tags:
        - user
      summary: get phone and send sms
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "09930731973"
    
      responses:
        "201":
          $ref: "#/components/responses/VerifyObject"
         
        "400":
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  No User:
                    type: string
                    example: "No user with this phone!!"

                
  "/user/resetpassword":
    post:
      tags:
        - user
      summary: reset password
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "navid7898"
                
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ok, your password changed."

        "401":
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "error, user with this phone number does not exist."


  "/account/create":
    post:
      tags:
        - instagram
      summary: create instagramaccount by username
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "hamgramco"
      responses:
          "201":
            description: created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Ok, Created" 
          "400":
            description: bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "error, account with this username not found, maybe is a not pro account"
                      
          "406":
            description: not acceptable 
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "error, account with this username already exists" 
                      
                      
  "/account/list":
    get:
      tags:
        - instagram
      summary: get all of instagramaccounts of a user
    
      responses:
          "200":
            $ref: "#/components/responses/InstagramAccountsObject" 
              
        
  "/account/rud/{instagram_account_id}":
    get:
      tags:
        - instagram
      parameters:
      - name: instagram_account_id
        in: path
        required: true
        schema:
          type: integer
      summary: get an instagramaccount by id
      
      responses:
          "200":
            $ref: "#/components/responses/InstagramAccountObject" 
            
    put:
      tags:
          - instagram
      parameters:
        - name: instagram_account_id
          in: path
          required: true
          schema:
            type: integer
      summary: update an instagramaccount by id
      requestBody:
          required: True
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstagramAccount" 
                
      responses:
          "200":
            $ref: "#/components/responses/InstagramAccountObject" 
            
    delete:
        tags:
            - instagram
        parameters:
          - name: instagram_account_id
            in: path
            required: true
            schema:
              type: integer
        summary: delete an instagramaccount by id
        
        responses:
            "204":
              description: No Content
               
  "/account/update":
    post:
      tags:
        - instagram
      summary: update all instagram accounts
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
                
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ok, all accounts updated" 
          
  
  "/competitor/create":
    post:
      tags:
        - instagram
      summary: create a competitoraccount
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "hamgramco"
                competitor_username:
                  type: string
                  example: "sarmo_scarf"
                  
      responses:
          "200":
            $ref: "#/components/responses/CompetitorAccountsObject" 
            
          "201":
            $ref: "#/components/responses/CompetitorAccountsObject"
            
          "400":
            description: bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "error, account with this username not found, maybe is a not pro account"

  
  "/competitor/list":
    get:
      tags:
        - instagram

      parameters:
        - name: instagram username
          in: query
          required: true
          schema:
            type: string
      summary: get a list of competitoraccount

      responses:
          "200":
            $ref: "#/components/responses/CompetitorAccountsObject" 
               
                      
  "/competitor/rud/{instagram_competitor_account_id}":
    get:
      tags:
        - instagram
      parameters:
      - name: instagram_competitor_account_id
        in: path
        required: true
        schema:
          type: integer
      summary: get a competitor account by id
      
      responses:
          "200":
            $ref: "#/components/responses/CompetitorAccountsObject" 
            
    delete:
        tags:
            - instagram
        parameters:
          - name: instagram_competitor_account_id
            in: path
            required: true
            schema:
              type: integer
        summary: delete a competitor account by id
        
        responses:
            "204":
              description: No Content
             
      
  "/competitor/remove":
    post:
      tags:
        - instagram
      summary: remove a competitor from account
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                  message:
                    type: string
                    example: "Ok, all accounts updated" 
                
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ok, all competitors updated" 
  
  
  
  "/competitor/update":
    post:
      tags:
        - instagram
      summary: update all competitor accounts
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
                
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ok, all competitors updated" 
                    
                    
  "/post/clone/account":
    post:
      tags:
        - instagram
      summary: clone last month post of account
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "hamgramco"
      responses:
          "200":
            description: ok
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Ok,Posts Cloned"
          "400":
            description: bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "error, account with this username not found, maybe is a not pro account"
  
                    
  "/post/clone/competitor":
    post:
      tags:
        - instagram
      summary: clone last month posts of competitor
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "hamgramco"
      responses:
          "200":
            $ref: "#/components/responses/InstagramPostObject" 
          
          "400":
            description: bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "error, account with this username not found, maybe is a not pro account"
  
  
  "/post/account/last":
    get:
      tags:
        - instagram
      summary: get 5 last posts of account
      parameters:
        - name: username
          required: true
          in: query
          schema:
            type: string
      
      responses:
          "200":
            $ref: "#/components/responses/InstagramPostObject" 
  
  
  "/post/competitor/last":
    get:
      tags:
        - instagram
      summary: get 5 last posts of competitor
      parameters:
        - name: username
          required: true
          in: query
          schema:
            type: string
            
      responses:
          "200":
            $ref: "#/components/responses/CompetitorPostObject" 
  
  
  "/search":
    get:
      tags:
        - instagram
      summary: serach a user by username
      parameters:
        - name: username
          required: true
          in: query
          schema:
            type: string
      responses:
          "200":
            description: ok
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Hamgram"
                      
                    username:
                      type: string
                      example: "hamgramco"
                      
                    followers_count:
                      type: integer
                      example: 2000
                      
                    follows_count:
                      type: integer
                      example: 3000
                      
                    media_count:
                      type: integer
                      example: 15
                      
                    profile_picture_url:
                      type: string
                      example: "https://scontent-lga3-1.xx.fbcdn.net/v/t51.2885-15/262811946_113415074364393_1896536035444422658_n.jpg?_nc_cat=105&ccb=1-7&_nc_sid=86c713&_nc_ohc=e57s_1Abze0AX8dHb8z&_nc_ht=scontent-lga3-1.xx&edm=AL-3X8kEAAAA&oh=00_AT_cbizwuGVXoPbjYAnJqHbAeKTK1lNqRbdNZ5F1eEcg3w&oe=6323608D"
                      
                    biography:
                      type: string
                      example: "description"
                    
  
          "400":
            description: bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "error, account with this username not found, maybe is a not pro account"
            
  
  "/analyze/competitor":
    get:
      tags:
        - instagram
      summary: data of competitor per day
      
      parameters:
        - name: instagram_account
          required: true
          in: query
          schema:
            type: integer
            
        - name: start_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-02"
            
        - name: end_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-12" 
            
      responses:
          "200":
            $ref: "#/components/responses/InstagramPostObject" 
  
  "/analyze/account":
    get:
      tags:
        - instagram
      summary: data of account per day
      
      parameters:
        - name: instagram_account
          required: true
          in: query
          schema:
            type: integer
            
        - name: start_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-02"
            
        - name: end_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-12" 
            
      responses:
          "200":
            $ref: "#/components/responses/InstagramPostObject" 
  
  "/analyze/post/account":
    get:
      tags:
        - instagram
      summary: data of account posts with time range
      parameters:
        - name: start_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-02"

        - name: end_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-08"
            
        - name: instagram_account
          required: true
          in: query
          schema:
            type: string
            example: "hamgramco"
            
      responses:
          "200":
            $ref: "#/components/responses/InstagramPostObject" 
  
  "/analyze/post/competitor":
    get:
      tags:
        - instagram
      summary: data of competitor posts with time range
      parameters:
        - name: start_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-02"

        - name: end_date
          required: true
          in: query
          schema:
            type: string
            format: date
            example: "2020-08-08"
            
        - name: instagram_account
          required: true
          in: query
          schema:
            type: string
            example: "hamgramco"
            
            
      responses:
          "200":
            $ref: "#/components/responses/InstagramPostObject" 
  

components:
  schemas:

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
          
        username:
          type: string
          default: None
          
        phone: 
          type: string
          description: phone of a user
          example: "09930731973"
          
        verifyCode:
          type: integer
          nullable: True
          
        verifyCode_create_time:
          type: string
          description: the time user is created
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
        created:
          type: string
          description: the time user is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
      required: 
        - phone
        
    InstagramAccount:
      type: object
      properties:
        user: 
          $ref: "#/components/schemas/User" 
          
        competitors:
          type: array
          items:
            $ref: "#/components/schemas/CompetitorAccount"
      
        username:
          example: "hamgramco"
          type: string
          
        ig_id: 
          example: 32435463
          type: integer
          
        account_id:
          example: 32435463
          type: integer
        
        name:
          example: "hamgram"
          type: string
          
        bio:
          example: "hamgramco"
          type: string
          
        image:
          type: string
          format: binary
    
        following:
          example: 100
          type: integer
          
        followers:
          example: 10
          type: integer
          
        website:
          type: string
          example: "hamgramco.ir"
          
        engagement:
          example: 24
          type: integer

        posts:
          example: 18
          type: integer
        
        created:
          type: string
          description: the time user is created
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
      required: 
        - username
        - ig_id
        - account_id
        - user
    
    InstagramPost:
      type: object
      properties:
      
        instagram_account: 
          example: 2
          type: integer
          description: id of account
        
        media_id:
          example: 243324324
          type: integer
        
        media_type:
          example: "VIDEO"
          type: string
        
        media_url:
          example: "https://sth.jpg"
          type: string
        
        permalink:
          example: "https://www.instagram.com/reel/Chm_rrWISR5/"
          type: string
        
        likes:
          example: 120
          type: integer
          
        comments:
          example: 90
          type: integer
          
        engagement:
          example: 34
          type: integer
        
        post_date:
          type: string
          description: the time posted
          format: date
          example: "2019-03-17"
          
        image:
          type: string
          format: binary
        
        caption:
          type: string
          example: "best selling company"
          
        created:
          type: string
          description: the time user is created
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
      
      required: 
        - instagram_account
        - media_id
  
    CompetitorAccount:
      type: object
      properties:
 
        username:
          example: "hamgramco"
          type: string
          
        ig_id: 
          example: 32435463
          type: integer
          
        account_id:
          example: 32435463
          type: integer
        
        name:
          example: "hamgram"
          type: string
          
        bio:
          example: "hamgramco"
          type: string
          
        image:
          type: string
          format: binary
    
        following:
          example: 100
          type: integer
          
        followers:
          example: 10
          type: integer
        
        website:
          example: "hamgramco.ir"
          type: string
          
        engagement:
          example: 24
          type: integer

        posts:
          example: 18
          type: integer
        
        created:
          type: string
          description: the time user is created
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
          
      required:
        - ig_id
        - account_id
        - username
  
    CompetitorAccountPost:
      type: object
      properties:
      
        instagram_account: 
          example: 2
          type: integer
          description: id of competitor account
          
        media_id:
          example: 243324324
          type: integer
        
        media_type:
          example: "VIDEO"
          type: string
        
        media_url:
          example: "https://sth.jpg"
          type: string
        
        permalink:
          example: "https://www.instagram.com/reel/Chm_rrWISR5/"
          type: string
          
        likes:
          example: 120
          type: integer
          
        comments:
          example: 90
          type: integer
          
        engagement:
          example: 34
          type: integer
        
        post_date:
          type: string
          description: the time posted
          format: date
          example: "2019-03-17"
          
        image:
          type: string
          format: binary
        
        caption:
          type: string
          example: "best selling company"
          
        created:
          type: string
          description: the time user is created
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time user is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
      
      required: 
        - instagram_account 
        - media_id
        
        
    DailyInstagramAccount:
      type: object
      properties:
      
        instagram_account: 
          example: 2
          type: integer
          description: id of account
          
        total_followers:
          example: 34523
          type: integer
          
        total_likes:
          type: integer
          example: 342455
        
        total_comments:
          type: integer
          example: 3424
        
        engagement:
          type: integer
          example: 34
      
        created:
          type: string
          description: the time model is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time model is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
      required:
        - instagram_account
        
    
    DailyCompetitorAccount:
      type: object
      properties:
      
        instagram_account: 
          example: 2
          type: integer
          description: id of competitor account
          
        total_followers:
          example: 34523
          type: integer
          
        total_likes:
          type: integer
          example: 342455
        
        total_comments:
          type: integer
          example: 3424
        
        engagement:
          type: integer
          example: 34
      
        created:
          type: string
          description: the time model is created 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
        modified:
          type: string
          description: the time model is modified 
          format: datetime
          example: "2019-03-17T12:00:00+0330"
          nullable: True
        
      required:
        - instagram_account
      
    
  responses:
  
    LoginObject:
      description: verify your phone
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh:
                type: string
                example: "askjdhladsbjkbdasd"
              access:
                type: string
                example: "askjdhladsbjkbdasd"
                
    VerifyObject:
      description: verify your phone
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Ok, verify it"
                
    WrongPasswordObject:
      description: wrong password
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Ok, Wrong password"
              
    UserObject:
      description: a user object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User" 
            
    InstagramAccountsObject:
      description: an instagramaccount object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/InstagramAccount" 
    
    InstagramAccountObject:
      description: an instagramaccount object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InstagramAccount" 
            
            
    CompetitorAccountObject:
      description: an array of CompetitorAccount object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CompetitorAccount" 
            
    CompetitorAccountsObject:
      description: an array of CompetitorAccount object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CompetitorAccount" 
    
    CompetitorPostObject:
      description: an CompetitorPost object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CompetitorAccountPost" 
    
    InstagramPostObject:
      description: an InstagramPost object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InstagramPost" 
            
    DailyInstagramObject:
        description: an InstagramPost object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyInstagramAccount" 

    DailyCompetitorObject:
        description: an InstagramPost object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyCompetitorAccount" 
            
  securitySchemes:
    AccessJWT:
      description: |

        use `user/auth/token` with provided authorization code from Serebrum to obtain `access` and `refresh` token,
        or use `user/auth/login` with credentials to obtain `access` and `refresh` token

        use `/user/auth/refresh` to refresh `access` token

        include access token as bearer authoriztion header to authorize
        ```
        Authorization: Bearer <access>
        ```
      type: http
      scheme: bearer
      bearerFormat: JWT

